{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handlerChange","type","onChange","App","handleChange","SyntheticEvent","setState","searchField","target","value","console","log","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAGaA,EAAO,SAAAC,GAAK,OAErB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCNbC,EAAW,SAAAR,GAAK,OAEzB,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KACX,SAAAN,GAAO,OACH,cAAC,EAAD,CAA0BA,QAASA,GAAtBA,EAAQC,UCL5BM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,cAAd,OACrB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAWF,MCiDlEG,G,8DA5Cb,aAAc,IAAD,8BACX,gBAgBFC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEC,YAAcF,EAAeG,OAAOC,QACpDC,QAAQC,IAAIN,EAAeG,OAAOC,QAjBlC,EAAKG,MAAQ,CACXhB,SAAW,GACXW,YAAc,IAJL,E,qDASb,WAAoB,IAAD,OAEjBM,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEV,SAAWqB,S,oBAS9C,WAAS,IAAD,EAE0BC,KAAKN,MAA9BhB,EAFD,EAECA,SAAUW,EAFX,EAEWA,YACXY,EAAmBvB,EAASwB,QAChC,SAAA7B,GAAO,OAAIA,EAAQE,KAAK4B,cAAcC,SAASf,EAAYgB,wBAG7D,OACE,sBAAKnC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWW,YAAY,mBAAmBC,cAAekB,KAAKd,eAC9D,cAAC,EAAD,CAAUR,SAAYuB,W,GAnCZK,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,IAAMC,WAAP,UAAkB,cAAC,EAAD,MAA2BC,SAASC,eAAe,SAKrFZ,M","file":"static/js/main.8ef4a856.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = props => (\n\n    <div className=\"card-container\">\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n);","import React  from 'react';\nimport {Card} from '../card/card.component';\nexport const CardList = props => (\n\n    <div className='card-list'>\n        {\n            props.monsters.map( \n                monster => \n                    <Card key= { monster.id } monster={monster} /> \n            )\n        }\n    </div>\n);","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({placeholder,handlerChange}) => (\n    <input className='search' type='search' placeholder={placeholder} onChange={ handlerChange }/>\n);","import React, {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\nimport './App.css';\nimport './components/card-list/card-list.styles.css';\n\n\nclass App extends Component{\n\n  constructor(){\n    super();\n    this.state = {\n      monsters : [],\n      searchField : ''  \n    }\n    \n  }\n\n  componentDidMount(){\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters : users }))\n\n  }\n\n  handleChange = SyntheticEvent => {\n    this.setState({ searchField : SyntheticEvent.target.value });\n    console.log(SyntheticEvent.target.value);\n  }   \n\n  render(){\n\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(\n      monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()) \n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodox</h1>\n        <SearchBox placeholder=\"search a monster\" handlerChange={this.handleChange}/>\n        <CardList monsters = {filteredMonsters} />\n      </div>\n    );\n  }\n  \n    \n  \n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<React.StrictMode><App /></React.StrictMode>,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}